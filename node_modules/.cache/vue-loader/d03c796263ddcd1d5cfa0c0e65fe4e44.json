{"remainingRequest":"/home/administrador/Documentos/twonotes-firebase/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/administrador/Documentos/twonotes-firebase/src/components/mainNota.vue?vue&type=style&index=0&id=18b775d7&scoped=true&lang=css&","dependencies":[{"path":"/home/administrador/Documentos/twonotes-firebase/src/components/mainNota.vue","mtime":1581079063709},{"path":"/home/administrador/Documentos/twonotes-firebase/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrador/Documentos/twonotes-firebase/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/administrador/Documentos/twonotes-firebase/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/administrador/Documentos/twonotes-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrador/Documentos/twonotes-firebase/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpvbHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzowCn0KLmZhZGUtb3V0LWluLWVudGVyLWFjdGl2ZSwKLmZhZGUtb3V0LWluLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3M7Cn0KLmZhZGUtb3V0LWluLWVudGVyLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbi1kZWxheTogLjNzOwp9CgouZmFkZS1vdXQtaW4tZW50ZXIsCi5mYWRlLW91dC1pbi1sZWF2ZS10byB7CiAgb3BhY2l0eTogMDsKfQo="},{"version":3,"sources":["mainNota.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"mainNota.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n\n  <section class=\"main-nota row col-12\">\n        <div id=\"barraBusqueda\" class=\"col-12 d-flex\">\n            <input type=\"text\" class=\"w-75 m-4\" required v-on:keypress=\"add\" v-model=\"textoNota\" placeholder=\"Texto Nota\">\n            <input type=\"file\" class=\"w-25 m-4\" required @change=\"anadirURL\" placeholder=\"Subir Archivo\">\n        </div>\n        <div id=\"barraFiltro\" class=\"col-12 d-flex\">\n            <input type=\"text\" class=\"w-100 m-4\" v-on:keypress=\"add\" v-model=\"textoFiltro\" placeholder=\"Texto Filtro\">\n        </div>\n        <div class=\"col-12 d-flex justify-content-around\">\n            <p class=\"mb-0\"><a v-on:click=\"compTodas\" href=\"#\">{{ textoCompletar }}</a>| Tienes un total de {{ totalNotas }} | Completadas: {{ notasCompletadas }} <a v-on:click=\"delCompletadas\" href=\"#\">Borrar Completadas</a></p>\n            <select v-model=\"orden\">\n                <option value=\"1\">Alfabetico</option>\n                <option value=\"2\">Completadas</option>\n                <option value=\"3\">Incompletas</option>\n                <option value=\"4\">Prioridad</option>\n                <option value=\"5\">Nueva</option>\n                <option value=\"6\">Antig√ºa</option>\n            </select>\n        </div>\n        <lista @prioridad-cambiada=\"forzarUpdate\" @borrarNota=\"borrarNota\" :ordenarNotas=\"ordenarNotas\"></lista>\n  </section>\n\n</template>\n\n<script lang=\"js\">\nimport lista from './lista.vue'\nimport {db} from '../../db.js'\nimport firebase from 'firebase'\n  export default  {\n    name: 'main-nota',\n    components: {\n      lista\n    },\n    props: [],\n    mounted () {\n    },\n    updated() {\n      localStorage.notas=JSON.stringify(this.notas);\n    },\n    data () {\n      return {\n        notas: [\n        ],\n        prio:'-1',\n        textoNota:'',\n        textoFiltro:'',\n        orden:\"4\",\n        completadas:false,\n        textoCompletar:'Completar todas',\n        linkArchivo: '',\n        nombreArchivo: '',\n        urlArchivo: ''\n      }\n    },\n    firestore: {\n      notas: db.collection('notas'),\n    },\n    methods: {\n        add(event){\n            if(event.keyCode == 13){\n                //firebase.storage().ref(`${this.imageData.name}`).put(this.imageData);\n                firebase.storage().ref(this.linkArchivo.name).put(this.linkArchivo).on(firebase.storage.TaskEvent.STATE_CHANGED,\n                 function(snapshot) {\n                     alert(snapshot)\n                }, function(error) {\n                    alert(error)\n                },() => {\n                    firebase.storage().ref().child(this.linkArchivo.name).getDownloadURL().then(\n                        url =>{\n                            this.urlArchivo = url\n                            db.collection('notas').add({text:this.textoNota,marcada:false,tiempo:Date.now(),prioridad:-1, usuario: firebase.auth().currentUser.email, archivo: {nombre: this.nombreArchivo,url: this.urlArchivo}});\n                            this.textoNota='';\n                        }\n                    ).catch()\n                    this.completadas=false;\n                 })\n            }\n        \n        },\n        delCompletadas: function(){\n            /*this.notas=this.notas.filter(function(elemento){\n                return !elemento.marcada;\n            })*/\n        },\n        calculaTiempo: function(index){\n            var tiempo=new Date(Date.now()-this.notas[index].tiempo);\n            return tiempo.getMinutes()\n        },\n        forzarUpdate: function(){\n          this.$forceUpdate();\n        },\n        compTodas: function(){\n            if(!this.completadas){\n                this.ordenarNotas.forEach((nota)=>{\n                    nota.marcada=true;\n                });\n                this.completadas=true;\n                this.textoCompletar=\"Descompletar todas\"\n            } else {\n                this.ordenarNotas.forEach((nota)=>{\n                    nota.marcada=false;\n                });\n                this.completadas=false;\n                this.textoCompletar='Completar todas '\n            }\n        },\n        borrarNota: function(todo){\n                db.collection('notas').doc(todo).delete();\n        },\n        anadirURL(e){\n            this.nombreArchivo = e.target.files[0].name;\n            this.linkArchivo = e.target.files[0];\n        }\n    },\n    computed: {\n        totalNotas: function(){\n            return this.notas.length\n        },\n        notasCompletadas: function(){\n            var filtradas=this.notas.filter(function(elemento){\n                return elemento.marcada==true;\n            })\n            return filtradas.length;\n        },\n        ordenarNotas: function(){\n            if(this.orden==\"2\")\n                return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                    var a=nota1.marcada\n                    var b=nota2.marcada\n                    return a == false ? 1 : a==b ? 0 : -1\n                });\n            else if(this.orden==\"3\")\n                return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                    var a=nota1.marcada\n                    var b=nota2.marcada\n                    return a == true ? 1 : a==b ? 0 : -1\n                });\n            else if(this.orden==\"4\")\n                return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                    var a=nota1.prioridad\n                    var b=nota2.prioridad\n                    return a < b ? 1 : a == b ? 0 : -1\n                });\n            else if(this.orden==\"5\")\n                return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                    var a=nota1.tiempo\n                    var b=nota2.tiempo\n                    return a < b ? 1 : a == b ? 0 : -1\n                });\n            else if(this.orden==\"5\")\n                return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                    var a=nota1.tiempo\n                    var b=nota2.tiempo\n                    return a > b ? 1 : a == b ? 0 : -1\n                });\n            return this.notas.slice().filter((nota1)=>{\n                    return nota1.text.toLowerCase().includes(this.textoFiltro.toLowerCase())\n                }).sort((nota1,nota2)=>{\n                var a=nota1.text.toLowerCase()\n                var b=nota2.text.toLowerCase()\n                return a > b ? 1 : a==b ? 0 : -1\n            });\n        }\n    }\n}\n\n\n</script>\n\n<style scoped lang=\"css\">\n  ol{\n    list-style-type: none;\n    padding:0\n  }\n  .fade-out-in-enter-active,\n  .fade-out-in-leave-active {\n    transition: opacity .3s;\n  }\n  .fade-out-in-enter-active {\n    transition-delay: .3s;\n  }\n\n  .fade-out-in-enter,\n  .fade-out-in-leave-to {\n    opacity: 0;\n  }\n</style>\n"]}]}